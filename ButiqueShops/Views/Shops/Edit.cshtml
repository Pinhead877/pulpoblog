@model ButiqueShops.ViewModels.ShopViewModel

@{
    ViewBag.Title = "Edit";
}
<div class="container first">
    <h2>Edit</h2>

    @using (Html.BeginForm("Edit", "Shops", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Shops</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OwnerId, "Shop Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OwnerId", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.LogoPath, new { htmlAttributes = new { @class = "form-control" } })
                    <input type="file" name="fileLogo" id="fileLogo" accept="image/*" class="form-control text-box single-line" />
                    @Html.ValidationMessageFor(model => model.LogoPath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <div id="map"></div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts{
    <script>
        var lat, lng;
    </script>
    @if (Model.Longitude != null && Model.Latitude != null)
    {
        <script>
            lat = @Model.Latitude;
            lng = @Model.Longitude;
        </script>
    }
    <script src="~/Scripts/Shops/create.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqvxTlef1NYM-glh2AdxQWOLh9CvO26Is&callback=initMap"></script>
    <script src="~/Scripts/GMaps/gmaps.min.js"></script>
}